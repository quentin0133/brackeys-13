[gd_scene load_steps=2 format=3 uid="uid://djr2t3rkhwdl0"]

[sub_resource type="GDScript" id="GDScript_ptl25"]
script/source = "class_name HotKeyRebindButton
extends Control

@onready var label = $HBoxContainer/Label as Label
@onready var button = $HBoxContainer/Button as Button
@export var action_name : String = \"move_left\"


func _ready():
	set_process_unhandled_key_input(false)
	set_label()
	set_button()


func set_label() -> void:
		label.text = \"Unassigned\"
		label.text = SettingsManager.settings_dict[\"keybinds_name\"][action_name]


func set_button() -> void:
		button.text = \"X\"
		button.text = SettingsManager.settings_dict[\"keybinds\"][action_name].as_text()


func _on_button_toggled(toggled_on):
	if toggled_on:
		button.text = \"Press any key ...\"
	else:
		set_button()


func _on_button_pressed():
	button.text = \"Press any key ...\"
	set_process_unhandled_key_input(true)
	for i in get_tree().get_nodes_in_group(\"hotkey_button\"):
		if i.action_name != self.action_name:
			i.set_process_unhandled_key_input(false)


func _unhandled_key_input(event):	
	SettingsManager.settings_dict[\"keybinds\"][action_name] = event
	InputMap.action_erase_events(action_name)
	InputMap.action_add_event(action_name, event)
	set_label()
	set_button()
"

[node name="HotKeyRebindButton" type="Control" groups=["hotkey_button"]]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -2.0
offset_right = -2.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_ptl25")

[node name="HBoxContainer" type="HBoxContainer" parent="."]
layout_mode = 0
offset_left = -32.0
offset_top = 1.0
offset_right = 522.0
offset_bottom = 51.0
theme_override_constants/separation = 25

[node name="Label" type="Label" parent="HBoxContainer"]
custom_minimum_size = Vector2(250, 0)
layout_mode = 2
theme_override_font_sizes/font_size = 30
text = "Button X"
horizontal_alignment = 1

[node name="VSeparator" type="VSeparator" parent="HBoxContainer"]
layout_mode = 2

[node name="Button" type="Button" parent="HBoxContainer"]
custom_minimum_size = Vector2(250, 0)
layout_mode = 2
theme_override_font_sizes/font_size = 30
text = "x"

[connection signal="pressed" from="HBoxContainer/Button" to="." method="_on_button_pressed"]
